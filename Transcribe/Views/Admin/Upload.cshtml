@model Transcribe.Models.UploadViewModel
@{
    ViewBag.Title = "Upload";
}

<h2>@ViewBag.Title</h2>

<div class="row">
    <div class="col-md-12">
        <section>

            <div class="row form-group">
                <div class="col-xs-12">
                    <ul class="nav nav-pills nav-justified thumbnail setup-panel">
                        <li class="active">
                            <a href="#step-1">
                                <h4 class="list-group-item-heading">Step 1</h4>
                                <p class="list-group-item-text">Upload an image</p>
                            </a>
                        </li>
                        <li class="disabled">
                            <a href="#step-2">
                                <h4 class="list-group-item-heading">Step 2</h4>
                                <p class="list-group-item-text">Crop image for processing (optional)</p>
                            </a>
                        </li>
                        <li class="disabled">
                            <a href="#step-3">
                                <h4 class="list-group-item-heading">Step 3</h4>
                                <p class="list-group-item-text">Input metadata and submit</p>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            @using (Html.BeginForm("Upload", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="row setup-content" id="step-1">
                    <div class="col-xs-12">
                        <div class="col-md-12 well">
                            @Html.ValidationMessage("file", new { @class = "alert alert-danger" })
                            <div class="form-group file-upload">
                                @Html.LabelFor(m => m.file, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.file, new { type = "file" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="button" id="activate-step-2" class="btn btn-primary btn-sm" value="Next" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row setup-content" id="step-2">
                    <div class="col-xs-12">
                        <div class="col-md-12 well">
                            <p><input type="button" id="activate-step-3" class="btn btn-primary btn-sm" value="Next" /></p>

                            <div id="crop-container">
                                <button title="Crop" id="crop" class="btn btn-default btn-lg"><i class="glyphicon glyphicon-screenshot"></i></button>
                                <img id="preview" src="#" alt="Image preview" class="image-preview" />
                                @Html.TextBoxFor(m => m.hdncoords, new { type = "hidden" })
                            </div>

                        </div>
                    </div>
                </div>
                <div class="row setup-content" id="step-3">
                    <div class="col-xs-12">
                        <div class="col-md-12 well">
                            @Html.ValidationSummary("", new { @class = "alert alert-danger" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.title, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.title, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.startdate, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.startdate, new { @class = "form-control datepicker-start" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.enddate, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.enddate, new { @class = "form-control datepicker-end" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.difficulty, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.difficulty, new SelectList(new List<Object> { new { value = "Beginner", text = "Beginner" }, new { value = "Intermediate", text = "Intermediate" }, new { value = "Advanced", text = "Advanced" }, }, "value", "text", 0), new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.pageno, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10 input-group">
                                    <span class="input-group-btn">
                                        <button type="button" class="btn btn-default btn-sm btn-number" data-type="minus" data-field="pageno">
                                            <span class="glyphicon glyphicon-minus"></span>
                                        </button>
                                    </span>
                                    @Html.TextBoxFor(m => m.pageno, new { @class = "form-control input-number" })
                                    <span class="input-group-btn">
                                        <button type="button" class="btn btn-default btn-sm btn-number" data-type="plus" data-field="pageno">
                                            <span class="glyphicon glyphicon-plus"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.sysident, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.sysident, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.type, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.RadioButtonFor(m => m.type, "TYPED", new { @checked = "checked" }) Typed
                                    @Html.RadioButtonFor(m => m.type, "HANDWRITTEN") Handwritten
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.persist, new { @class = "col-md-2 control-label text-right" })
                                <div class="col-md-10">
                                    <div class="input-group">
                                        <div id="radioBtn" class="btn-group">
                                            <a class="btn btn-warning btn-sm active" data-toggle="persist" data-title="Y">Yes</a>
                                            <a class="btn btn-warning btn-sm notActive" data-toggle="persist" data-title="N">No</a>
                                        </div>
                                        @Html.TextBoxFor(m => m.persist, new { type = "hidden" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" class="btn btn-primary" onclick="Process()" value="Submit" />
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            }
            <div>
                @Html.ActionLink("Back to Index", "Index")
            </div>
        </section>
    </div>

    <div id="loadingModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="loadingModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="loadingModalLabel">Uploading</h4>
                </div>
                <div class="modal-body">
                    <p>
                        <img src="/Content/image/ajax-loader.gif" alt="Loading" />
                        <span class="wait">Please wait...</span>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jcrop")
    @Scripts.Render("~/bundles/datepicker")
    @Scripts.Render("~/bundles/application")
}
